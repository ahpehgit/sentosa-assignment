# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Sentosa Assigment CI

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  #pull_request:
  #  branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        #node-version: [12.x, 14.x, 16.x]
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: MongoDB in GitHub Actions
        # You may pin to the exact commit or the version.
        # uses: supercharge/mongodb-github-action@538a4d2a1041920c47630172445cb688592d6e51
        uses: supercharge/mongodb-github-action@1.12.0
        with:
          # MongoDB version to use (default "latest")
          mongodb-version: latest # optional, default is latest
          # MongoDB replica set name (no replica set by default)
          mongodb-replica-set: no # optional, default is 
          # MongoDB port to use (default 27017)
          mongodb-port: 27017 # optional, default is 27017
          # MongoDB db to create (default: none)
          mongodb-db: none # optional, default is 
          # MongoDB root username (default: none)
          mongodb-username: none # optional, default is 
          # MongoDB root password (default: none)
          mongodb-password: none # optional, default is 
    
      - name: Create env file
        run: |
          echo touch .env
          echo SERVER="http://localhost:3000" >> .env
          echo MONGO_HOSTNAME="localhost" >> .env
          echo TOKEN_SECRET=${{ secrets.TOKEN_SECRET }} >> .env
          cat .env
          
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          # cache: 'npm'
      - name: Cache dependencies
        uses: actions/cache@v4.2.0
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-
    
      - name: Dotenv Action
        uses: falti/dotenv-action@v0.2.7
        
      - name: NPM install, build and test
        run: | 
          npm ci
          npm run build --if-present
          npm test
        env:
          CI: true
